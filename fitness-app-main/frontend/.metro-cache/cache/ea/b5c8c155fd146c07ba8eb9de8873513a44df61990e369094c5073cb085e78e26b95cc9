{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoHaptics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":40,"index":108}}],"key":"3WqQQRS5WG7zFWoPm3OZ82Alno4=","exportNames":["*"],"imports":1}},{"name":"./Haptics.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":109},"end":{"line":4,"column":96,"index":205}}],"key":"4K2GreqvhWei0+qUJVORf63x8ww=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.notificationAsync = notificationAsync;\n  exports.impactAsync = impactAsync;\n  exports.selectionAsync = selectionAsync;\n  exports.performAndroidHapticsAsync = performAndroidHapticsAsync;\n  Object.defineProperty(exports, \"NotificationFeedbackType\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.NotificationFeedbackType;\n    }\n  });\n  Object.defineProperty(exports, \"ImpactFeedbackStyle\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.ImpactFeedbackStyle;\n    }\n  });\n  Object.defineProperty(exports, \"AndroidHaptics\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.AndroidHaptics;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _ExpoHaptics = require(_dependencyMap[2], \"./ExpoHaptics\");\n  var ExpoHaptics = _interopDefault(_ExpoHaptics);\n  var _HapticsTypes = require(_dependencyMap[3], \"./Haptics.types\");\n  // @needsAudit\n  /**\n   * The kind of notification response used in the feedback.\n   * @param type A notification feedback type that on Android is simulated using [`Vibrator`](https://developer.android.com/reference/android/os/Vibrator)\n   * and iOS is directly mapped to [`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype).\n   * You can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  function notificationAsync() {\n    return _notificationAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param style A collision indicator that on Android is simulated using [`Vibrator`](https://developer.android.com/reference/android/os/Vibrator)\n   * and on iOS, it is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/feedbackstyle).\n   * You can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy, Rigid, Soft}`.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  function _notificationAsync() {\n    _notificationAsync = (0, _asyncToGenerator.default)(function* () {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _HapticsTypes.NotificationFeedbackType.Success;\n      if (!ExpoHaptics.default?.notificationAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptics', 'notificationAsync');\n      }\n      yield ExpoHaptics.default.notificationAsync(type);\n    });\n    return _notificationAsync.apply(this, arguments);\n  }\n  function impactAsync() {\n    return _impactAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Used to let a user know when a selection change has been registered.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  function _impactAsync() {\n    _impactAsync = (0, _asyncToGenerator.default)(function* () {\n      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _HapticsTypes.ImpactFeedbackStyle.Medium;\n      if (!ExpoHaptics.default?.impactAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptic', 'impactAsync');\n      }\n      yield ExpoHaptics.default.impactAsync(style);\n    });\n    return _impactAsync.apply(this, arguments);\n  }\n  function selectionAsync() {\n    return _selectionAsync.apply(this, arguments);\n  }\n  /**\n   * Use the device haptics engine to provide physical feedback to the user.\n   *\n   * @platform android\n   */\n  function _selectionAsync() {\n    _selectionAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoHaptics.default?.selectionAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptic', 'selectionAsync');\n      }\n      yield ExpoHaptics.default.selectionAsync();\n    });\n    return _selectionAsync.apply(this, arguments);\n  }\n  function performAndroidHapticsAsync(_x) {\n    return _performAndroidHapticsAsync.apply(this, arguments);\n  }\n  function _performAndroidHapticsAsync() {\n    _performAndroidHapticsAsync = (0, _asyncToGenerator.default)(function* (type) {\n      if (_expoModulesCore.Platform.OS !== 'android') {\n        return;\n      }\n      ExpoHaptics.default.performHapticsAsync(type);\n    });\n    return _performAndroidHapticsAsync.apply(this, arguments);\n  }\n});","lineCount":113,"map":[[12,2,14,0,"exports"],[12,9,14,0],[12,10,14,0,"notificationAsync"],[12,27,14,0],[12,30,14,0,"notificationAsync"],[12,47,14,0],[13,2,30,0,"exports"],[13,9,30,0],[13,10,30,0,"impactAsync"],[13,21,30,0],[13,24,30,0,"impactAsync"],[13,35,30,0],[14,2,44,0,"exports"],[14,9,44,0],[14,10,44,0,"selectionAsync"],[14,24,44,0],[14,27,44,0,"selectionAsync"],[14,41,44,0],[15,2,56,0,"exports"],[15,9,56,0],[15,10,56,0,"performAndroidHapticsAsync"],[15,36,56,0],[15,39,56,0,"performAndroidHapticsAsync"],[15,65,56,0],[16,2,63,0,"Object"],[16,8,63,0],[16,9,63,0,"defineProperty"],[16,23,63,0],[16,24,63,0,"exports"],[16,31,63,0],[17,4,63,0,"enumerable"],[17,14,63,0],[18,4,63,0,"get"],[18,7,63,0],[18,18,63,0,"get"],[18,19,63,0],[19,6,63,0],[19,13,63,9,"NotificationFeedbackType"],[19,26,63,33],[19,27,63,33,"NotificationFeedbackType"],[19,51,63,33],[20,4,63,33],[21,2,63,33],[22,2,63,0,"Object"],[22,8,63,0],[22,9,63,0,"defineProperty"],[22,23,63,0],[22,24,63,0,"exports"],[22,31,63,0],[23,4,63,0,"enumerable"],[23,14,63,0],[24,4,63,0,"get"],[24,7,63,0],[24,18,63,0,"get"],[24,19,63,0],[25,6,63,0],[25,13,63,35,"ImpactFeedbackStyle"],[25,26,63,54],[25,27,63,54,"ImpactFeedbackStyle"],[25,46,63,54],[26,4,63,54],[27,2,63,54],[28,2,63,0,"Object"],[28,8,63,0],[28,9,63,0,"defineProperty"],[28,23,63,0],[28,24,63,0,"exports"],[28,31,63,0],[29,4,63,0,"enumerable"],[29,14,63,0],[30,4,63,0,"get"],[30,7,63,0],[30,18,63,0,"get"],[30,19,63,0],[31,6,63,0],[31,13,63,56,"AndroidHaptics"],[31,26,63,70],[31,27,63,70,"AndroidHaptics"],[31,41,63,70],[32,4,63,70],[33,2,63,70],[34,2,63,73],[34,6,63,73,"_babelRuntimeHelpersAsyncToGenerator"],[34,42,63,73],[34,45,63,73,"require"],[34,52,63,73],[34,53,63,73,"_dependencyMap"],[34,67,63,73],[35,2,63,73],[35,6,63,73,"_asyncToGenerator"],[35,23,63,73],[35,26,63,73,"_interopDefault"],[35,41,63,73],[35,42,63,73,"_babelRuntimeHelpersAsyncToGenerator"],[35,78,63,73],[36,2,1,0],[36,6,1,0,"_expoModulesCore"],[36,22,1,0],[36,25,1,0,"require"],[36,32,1,0],[36,33,1,0,"_dependencyMap"],[36,47,1,0],[37,2,3,0],[37,6,3,0,"_ExpoHaptics"],[37,18,3,0],[37,21,3,0,"require"],[37,28,3,0],[37,29,3,0,"_dependencyMap"],[37,43,3,0],[38,2,3,0],[38,6,3,0,"ExpoHaptics"],[38,17,3,0],[38,20,3,0,"_interopDefault"],[38,35,3,0],[38,36,3,0,"_ExpoHaptics"],[38,48,3,0],[39,2,4,0],[39,6,4,0,"_HapticsTypes"],[39,19,4,0],[39,22,4,0,"require"],[39,29,4,0],[39,30,4,0,"_dependencyMap"],[39,44,4,0],[40,2,6,0],[41,2,7,0],[42,0,8,0],[43,0,9,0],[44,0,10,0],[45,0,11,0],[46,0,12,0],[47,0,13,0],[48,2,7,0],[48,11,14,22,"notificationAsync"],[48,28,14,39,"notificationAsync"],[48,29,14,39],[49,4,14,39],[49,11,14,39,"_notificationAsync"],[49,29,14,39],[49,30,14,39,"apply"],[49,35,14,39],[49,42,14,39,"arguments"],[49,51,14,39],[50,2,14,39],[50,4,23,0],[51,2,24,0],[52,0,25,0],[53,0,26,0],[54,0,27,0],[55,0,28,0],[56,0,29,0],[57,2,24,0],[57,11,24,0,"_notificationAsync"],[57,30,24,0],[58,4,24,0,"_notificationAsync"],[58,22,24,0],[58,29,24,0,"_asyncToGenerator"],[58,46,24,0],[58,47,24,0,"default"],[58,54,24,0],[58,56,14,7],[58,69,16,17],[59,6,16,17],[59,10,15,2,"type"],[59,14,15,32],[59,17,15,32,"arguments"],[59,26,15,32],[59,27,15,32,"length"],[59,33,15,32],[59,41,15,32,"arguments"],[59,50,15,32],[59,58,15,32,"undefined"],[59,67,15,32],[59,70,15,32,"arguments"],[59,79,15,32],[59,85,15,35,"NotificationFeedbackType"],[59,98,15,59],[59,99,15,59,"NotificationFeedbackType"],[59,123,15,59],[59,124,15,60,"Success"],[59,131,15,67],[60,6,17,2],[60,10,17,6],[60,11,17,7,"ExpoHaptics"],[60,22,17,18],[60,23,17,18,"default"],[60,30,17,18],[60,32,17,20,"notificationAsync"],[60,49,17,37],[60,51,17,39],[61,8,18,4],[61,14,18,10],[61,18,18,14,"UnavailabilityError"],[61,34,18,33],[61,35,18,33,"UnavailabilityError"],[61,54,18,33],[61,55,18,34],[61,64,18,43],[61,66,18,45],[61,85,18,64],[61,86,18,65],[62,6,19,2],[63,6,20,2],[63,12,20,8,"ExpoHaptics"],[63,23,20,19],[63,24,20,19,"default"],[63,31,20,19],[63,32,20,20,"notificationAsync"],[63,49,20,37],[63,50,20,38,"type"],[63,54,20,42],[63,55,20,43],[64,4,21,0],[64,5,21,1],[65,4,21,1],[65,11,21,1,"_notificationAsync"],[65,29,21,1],[65,30,21,1,"apply"],[65,35,21,1],[65,42,21,1,"arguments"],[65,51,21,1],[66,2,21,1],[67,2,21,1],[67,11,30,22,"impactAsync"],[67,22,30,33,"impactAsync"],[67,23,30,33],[68,4,30,33],[68,11,30,33,"_impactAsync"],[68,23,30,33],[68,24,30,33,"apply"],[68,29,30,33],[68,36,30,33,"arguments"],[68,45,30,33],[69,2,30,33],[69,4,39,0],[70,2,40,0],[71,0,41,0],[72,0,42,0],[73,0,43,0],[74,2,40,0],[74,11,40,0,"_impactAsync"],[74,24,40,0],[75,4,40,0,"_impactAsync"],[75,16,40,0],[75,23,40,0,"_asyncToGenerator"],[75,40,40,0],[75,41,40,0,"default"],[75,48,40,0],[75,50,30,7],[75,63,32,17],[76,6,32,17],[76,10,31,2,"style"],[76,15,31,28],[76,18,31,28,"arguments"],[76,27,31,28],[76,28,31,28,"length"],[76,34,31,28],[76,42,31,28,"arguments"],[76,51,31,28],[76,59,31,28,"undefined"],[76,68,31,28],[76,71,31,28,"arguments"],[76,80,31,28],[76,86,31,31,"ImpactFeedbackStyle"],[76,99,31,50],[76,100,31,50,"ImpactFeedbackStyle"],[76,119,31,50],[76,120,31,51,"Medium"],[76,126,31,57],[77,6,33,2],[77,10,33,6],[77,11,33,7,"ExpoHaptics"],[77,22,33,18],[77,23,33,18,"default"],[77,30,33,18],[77,32,33,20,"impactAsync"],[77,43,33,31],[77,45,33,33],[78,8,34,4],[78,14,34,10],[78,18,34,14,"UnavailabilityError"],[78,34,34,33],[78,35,34,33,"UnavailabilityError"],[78,54,34,33],[78,55,34,34],[78,63,34,42],[78,65,34,44],[78,78,34,57],[78,79,34,58],[79,6,35,2],[80,6,36,2],[80,12,36,8,"ExpoHaptics"],[80,23,36,19],[80,24,36,19,"default"],[80,31,36,19],[80,32,36,20,"impactAsync"],[80,43,36,31],[80,44,36,32,"style"],[80,49,36,37],[80,50,36,38],[81,4,37,0],[81,5,37,1],[82,4,37,1],[82,11,37,1,"_impactAsync"],[82,23,37,1],[82,24,37,1,"apply"],[82,29,37,1],[82,36,37,1,"arguments"],[82,45,37,1],[83,2,37,1],[84,2,37,1],[84,11,44,22,"selectionAsync"],[84,25,44,36,"selectionAsync"],[84,26,44,36],[85,4,44,36],[85,11,44,36,"_selectionAsync"],[85,26,44,36],[85,27,44,36,"apply"],[85,32,44,36],[85,39,44,36,"arguments"],[85,48,44,36],[86,2,44,36],[87,2,51,0],[88,0,52,0],[89,0,53,0],[90,0,54,0],[91,0,55,0],[92,2,51,0],[92,11,51,0,"_selectionAsync"],[92,27,51,0],[93,4,51,0,"_selectionAsync"],[93,19,51,0],[93,26,51,0,"_asyncToGenerator"],[93,43,51,0],[93,44,51,0,"default"],[93,51,51,0],[93,53,44,7],[93,66,44,54],[94,6,45,2],[94,10,45,6],[94,11,45,7,"ExpoHaptics"],[94,22,45,18],[94,23,45,18,"default"],[94,30,45,18],[94,32,45,20,"selectionAsync"],[94,46,45,34],[94,48,45,36],[95,8,46,4],[95,14,46,10],[95,18,46,14,"UnavailabilityError"],[95,34,46,33],[95,35,46,33,"UnavailabilityError"],[95,54,46,33],[95,55,46,34],[95,63,46,42],[95,65,46,44],[95,81,46,60],[95,82,46,61],[96,6,47,2],[97,6,48,2],[97,12,48,8,"ExpoHaptics"],[97,23,48,19],[97,24,48,19,"default"],[97,31,48,19],[97,32,48,20,"selectionAsync"],[97,46,48,34],[97,47,48,35],[97,48,48,36],[98,4,49,0],[98,5,49,1],[99,4,49,1],[99,11,49,1,"_selectionAsync"],[99,26,49,1],[99,27,49,1,"apply"],[99,32,49,1],[99,39,49,1,"arguments"],[99,48,49,1],[100,2,49,1],[101,2,49,1],[101,11,56,22,"performAndroidHapticsAsync"],[101,37,56,48,"performAndroidHapticsAsync"],[101,38,56,48,"_x"],[101,40,56,48],[102,4,56,48],[102,11,56,48,"_performAndroidHapticsAsync"],[102,38,56,48],[102,39,56,48,"apply"],[102,44,56,48],[102,51,56,48,"arguments"],[102,60,56,48],[103,2,56,48],[104,2,56,48],[104,11,56,48,"_performAndroidHapticsAsync"],[104,39,56,48],[105,4,56,48,"_performAndroidHapticsAsync"],[105,31,56,48],[105,38,56,48,"_asyncToGenerator"],[105,55,56,48],[105,56,56,48,"default"],[105,63,56,48],[105,65,56,7],[105,76,56,49,"type"],[105,80,56,69],[105,82,56,71],[106,6,57,2],[106,10,57,6,"Platform"],[106,26,57,14],[106,27,57,14,"Platform"],[106,35,57,14],[106,36,57,15,"OS"],[106,38,57,17],[106,43,57,22],[106,52,57,31],[106,54,57,33],[107,8,58,4],[108,6,59,2],[109,6,60,2,"ExpoHaptics"],[109,17,60,13],[109,18,60,13,"default"],[109,25,60,13],[109,26,60,14,"performHapticsAsync"],[109,45,60,33],[109,46,60,34,"type"],[109,50,60,38],[109,51,60,39],[110,4,61,0],[110,5,61,1],[111,4,61,1],[111,11,61,1,"_performAndroidHapticsAsync"],[111,38,61,1],[111,39,61,1,"apply"],[111,44,61,1],[111,51,61,1,"arguments"],[111,60,61,1],[112,2,61,1],[113,0,61,1],[113,3]],"functionMap":{"names":["<global>","notificationAsync","impactAsync","selectionAsync","performAndroidHapticsAsync"],"mappings":"AAA;OCa;CDO;OES;CFO;OGO;CHK;OIO;CJK"},"hasCjsExports":false},"type":"js/module"}]}